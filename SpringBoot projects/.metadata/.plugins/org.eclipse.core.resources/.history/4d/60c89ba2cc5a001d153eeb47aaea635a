package com.te.springboot.controller;

import java.util.Set;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpRequest;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.te.springboot.dto.EmployeeDto;
import com.te.springboot.dto.LoginDto;
import com.te.springboot.entity.EmployeePrimaryInfo;
import com.te.springboot.service.EmployeeService;

import lombok.extern.slf4j.Slf4j;

@RestController
@Slf4j
public class EmployeeController {
	@Autowired
	private EmployeeService service;

	@PostMapping("/register")
	public ResponseEntity<?> register(@RequestBody EmployeeDto dto) {

		try {
			EmployeePrimaryInfo primaryInfo = service.dtoToEntity(dto);
			return new ResponseEntity<EmployeeDto>(service.entityToDto(primaryInfo), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>("Something Went Wrong !", HttpStatus.BAD_REQUEST);
		}

	}

	@GetMapping("/getbyid/{empId}")
	public ResponseEntity<?> getById(@PathVariable String empId) {
		try {
			return new ResponseEntity<EmployeePrimaryInfo>(service.getById(empId), HttpStatus.OK);
		} catch (Exception e) {

			return new ResponseEntity<String>("ID Not Found", HttpStatus.BAD_REQUEST);
		}

	}

	@PutMapping("/update")
	public ResponseEntity<?> updateDetails(@RequestBody EmployeePrimaryInfo primaryinfo) {
		log.info("New Employee data is Updated");
		try {
			return new ResponseEntity<EmployeePrimaryInfo>(service.updateDetails(primaryinfo), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>("Data is Not Updated", HttpStatus.BAD_REQUEST);
		}

	}

	@GetMapping("/getall")
	public ResponseEntity<?> getAllEmployees() {

		if (service.getAllEmployees() != null) {
			return new ResponseEntity<>(service.getAllEmployees(), HttpStatus.OK);
		}
		return new ResponseEntity<String>("Something went Wrong ", HttpStatus.BAD_REQUEST);
	}

	@GetMapping("/login")
	public ResponseEntity<?> getlogin(@RequestBody LoginDto dto) {
		Boolean login = service.getLogin(dto);
		if (login != null) {
			return new ResponseEntity<String>("Login Successful", HttpStatus.OK);
		}

		return new ResponseEntity<String>("Invalid Credentials", HttpStatus.BAD_REQUEST);
	}

}
